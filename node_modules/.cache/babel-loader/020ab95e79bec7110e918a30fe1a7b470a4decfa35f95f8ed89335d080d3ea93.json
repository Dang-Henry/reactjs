{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LifecycleHook = exports.MessageType = exports.PermissionType = void 0;\n/**\n * @internal\n */\nvar PermissionType;\n(function (PermissionType) {\n  PermissionType[\"Dispatch\"] = \"Dispatch\";\n  PermissionType[\"Subscribe\"] = \"Subscribe\";\n})(PermissionType = exports.PermissionType || (exports.PermissionType = {}));\n/**\n * @internal\n */\nvar MessageType;\n(function (MessageType) {\n  MessageType[\"GetState\"] = \"getState\";\n  MessageType[\"Dispatch\"] = \"dispatch\";\n  MessageType[\"Subscribe\"] = \"subscribe\";\n  MessageType[\"Unsubscribe\"] = \"unsubscribe\";\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\n/**\n *\n * There are two types of hooks: `LifecycleHook.DispatchAction` and `LifecycleHook.UpdateAction`.\n *\n * @remarks\n * `DispatchAction` hooks are run when an action is dispatched with the `.dispatch()` function:\n *\n * ```js\n * const toastNotice = Toast.create(app, {message: 'Product saved'});\n * toastNotice.dispatch(Toast.Action.SHOW);\n * ```\n *\n * `UpdateAction` hooks are run when an action is updated, using the `.set()` function:\n *\n * ```js\n * toastNotice.set({message: 'Product could not be saved', isError: true});\n * ```\n *\n * @public\n */\nvar LifecycleHook;\n(function (LifecycleHook) {\n  LifecycleHook[\"UpdateAction\"] = \"UpdateAction\";\n  LifecycleHook[\"DispatchAction\"] = \"DispatchAction\";\n})(LifecycleHook = exports.LifecycleHook || (exports.LifecycleHook = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","LifecycleHook","MessageType","PermissionType"],"sources":["/Users/huandang/Documents/1.Develop/1.1.ProjectGithub/reactjs/node_modules/@shopify/app-bridge/client/types.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LifecycleHook = exports.MessageType = exports.PermissionType = void 0;\n/**\n * @internal\n */\nvar PermissionType;\n(function (PermissionType) {\n    PermissionType[\"Dispatch\"] = \"Dispatch\";\n    PermissionType[\"Subscribe\"] = \"Subscribe\";\n})(PermissionType = exports.PermissionType || (exports.PermissionType = {}));\n/**\n * @internal\n */\nvar MessageType;\n(function (MessageType) {\n    MessageType[\"GetState\"] = \"getState\";\n    MessageType[\"Dispatch\"] = \"dispatch\";\n    MessageType[\"Subscribe\"] = \"subscribe\";\n    MessageType[\"Unsubscribe\"] = \"unsubscribe\";\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\n/**\n *\n * There are two types of hooks: `LifecycleHook.DispatchAction` and `LifecycleHook.UpdateAction`.\n *\n * @remarks\n * `DispatchAction` hooks are run when an action is dispatched with the `.dispatch()` function:\n *\n * ```js\n * const toastNotice = Toast.create(app, {message: 'Product saved'});\n * toastNotice.dispatch(Toast.Action.SHOW);\n * ```\n *\n * `UpdateAction` hooks are run when an action is updated, using the `.set()` function:\n *\n * ```js\n * toastNotice.set({message: 'Product could not be saved', isError: true});\n * ```\n *\n * @public\n */\nvar LifecycleHook;\n(function (LifecycleHook) {\n    LifecycleHook[\"UpdateAction\"] = \"UpdateAction\";\n    LifecycleHook[\"DispatchAction\"] = \"DispatchAction\";\n})(LifecycleHook = exports.LifecycleHook || (exports.LifecycleHook = {}));\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAGF,OAAO,CAACG,WAAW,GAAGH,OAAO,CAACI,cAAc,GAAG,KAAK,CAAC;AAC7E;AACA;AACA;AACA,IAAIA,cAAc;AAClB,CAAC,UAAUA,cAAc,EAAE;EACvBA,cAAc,CAAC,UAAU,CAAC,GAAG,UAAU;EACvCA,cAAc,CAAC,WAAW,CAAC,GAAG,WAAW;AAC7C,CAAC,EAAEA,cAAc,GAAGJ,OAAO,CAACI,cAAc,KAAKJ,OAAO,CAACI,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;AAC5E;AACA;AACA;AACA,IAAID,WAAW;AACf,CAAC,UAAUA,WAAW,EAAE;EACpBA,WAAW,CAAC,UAAU,CAAC,GAAG,UAAU;EACpCA,WAAW,CAAC,UAAU,CAAC,GAAG,UAAU;EACpCA,WAAW,CAAC,WAAW,CAAC,GAAG,WAAW;EACtCA,WAAW,CAAC,aAAa,CAAC,GAAG,aAAa;AAC9C,CAAC,EAAEA,WAAW,GAAGH,OAAO,CAACG,WAAW,KAAKH,OAAO,CAACG,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAID,aAAa;AACjB,CAAC,UAAUA,aAAa,EAAE;EACtBA,aAAa,CAAC,cAAc,CAAC,GAAG,cAAc;EAC9CA,aAAa,CAAC,gBAAgB,CAAC,GAAG,gBAAgB;AACtD,CAAC,EAAEA,aAAa,GAAGF,OAAO,CAACE,aAAa,KAAKF,OAAO,CAACE,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}